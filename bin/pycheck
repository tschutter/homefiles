#!/bin/sh
#
# Runs multiple Python static checkers.
#

# Process command line.
SINGLE=false
FILE=""
FOUND=false
while [ "$1" != "" ]; do
    case $1 in
        -h|"-?"|--help)
            echo "Usage: `basename $0` [options] FILE" >&2
            echo "  Runs multiple Python static checkers." >&2
            echo "" >&2
            echo "Options:" >&2
            echo "  -h, --help            show this help message and exit" >&2
            echo "  -s, --single          only run first checker found" >&2
            exit 1
            ;;
        -s|--single)
            SINGLE=true
            ;;
        -*)
            echo "ERROR: Unknown option $1" >&2
            exit 1
            ;;
        *)
            if [ "${FILE}" = "" ]; then
                FILE=$1
            else
                echo "ERROR: To many args" >&2
                exit 1
            fi
            ;;
    esac
    shift
done

if [ "${FILE}" = "" ]; then
    echo "ERROR: FILE not specified" >&2
    exit 1
fi
if [ ! -f "${FILE}" ]; then
    echo "ERROR: ${FILE} not found" >&2
    exit 1
fi

checkpath() {
    # Return True if $1 is in ${PATH}.
    IFS=':'
    for dir in $PATH ; do
        if [ -x "$dir/$1" ]; then
           return 0
        fi
    done
    return 1
}

if checkpath pylint; then
    if ! ${SINGLE}; then
        echo "## pylint"
    fi
    # pylint 1.1.0 has a bug where it emits to stderr this message:
    #   UserWarning: parseable output format is deprecated
    # but there is no way to suppress it.
    ( pylint\
        --profile=no\
        --persistent=no\
        --output-format=parseable\
        --reports=no\
        ${FILE}\
        2>&1
    ) | grep -v -E '^\*\*\*|--msg-template'
    if ${SINGLE}; then
        exit
    fi
    FOUND=true
elif ! ${SINGLE}; then
    echo "## pylint not installed"
fi

if checkpath pychecker; then
    # pychecker raises an ImportError if the file does not end in ".py".
    if [ ${FILE%.py} != ${FILE} ]; then
        if ! ${SINGLE}; then
            echo "## pychecker"
        fi
        # --maxargs cannot be specified in ~/.pycheckrc
        pychecker --maxargs=20 --limit=200 --quiet ${FILE}
        # Cleanup generated bytecode file.
        if [ -f ${FILE}c ]; then
            rm ${FILE}c
        fi
        if ${SINGLE}; then
            exit
        fi
        FOUND=true
    else
        echo "## pychecker not run because input file does not have .py suffix."
    fi
elif ! ${SINGLE}; then
    echo "## pychecker not installed"
fi

if checkpath pyflakes; then
    if ! ${SINGLE}; then
        echo "## pyflakes"
    fi
    pyflakes ${FILE}
    if ${SINGLE}; then
        exit
    fi
    FOUND=true
elif ! ${SINGLE}; then
    echo "## pyflakes not installed"
fi

if checkpath pep8; then
    if ! ${SINGLE}; then
        echo "## pep8"
    fi
    # E202 whitespace before ')'
    pep8 --ignore=E202 --repeat ${FILE}
    if ${SINGLE}; then
        exit
    fi
    FOUND=true
elif ! ${SINGLE}; then
    echo "## pep8 not installed"
fi

if ! ${FOUND}; then
    echo "ERROR: No Python static checker found." >&2
    exit 1
fi
