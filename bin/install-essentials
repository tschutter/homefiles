#!/bin/sh
#
# Install essential packages.
#

ROOTDIR="${HOME}/.homefiles"
if [ -x "/usr/bin/doas" ]; then
    HOME=/root
    SUDO="/usr/bin/doas"
else
    SUDO="sudo --set-home"
fi

HAS_X=true

if [ -x "/usr/bin/apt" ]; then
    # Debian derivatives.

    # Add third party apt repositories.
    ${SUDO} add-apt-repository ppa:agornostal/ulauncher

    # http://packages.ubuntu.com/
    # sudo apt-cache search REGEX
    # ncurses-term adds /etc/terminfo for urxvt
    PACKAGES="\
        emacs\
        emacs-el\
        fzf\
        git\
        git-doc\
        git-man\
        global\
        libdata-ical-perl\
        libnotify-bin\
        libtext-autoformat-perl\
        mg\
        ncurses-term\
        pass\
        psutils\
        pymacs\
        python-dev-is-python3\
        python-is-python3\
        python3-dev\
        python3-doc\
        python3-docutils\
        python3-rope\
        ripgrep\
        shellcheck\
        tmux\
        ulauncher\
        w3m-el\
        w3m\
        xsel\
        xzgv\
    "

    # Update package lists.
    ${SUDO} apt update

    # shellcheck disable=SC2086
    ${SUDO} apt install ${PACKAGES}

    # Set the executable from xfce4-terminal as the default xterm.
    # rxvt-unicode suffers from the Ctrl-Shift gives yellow box problem.
    ${SUDO} update-alternatives --set x-terminal-emulator /usr/bin/xfce4-terminal.wrapper

elif [ -x "/usr/sbin/pkg_add" ]; then
    # OpenBSD.
    # pkg_add supports `stems with flavors', that is, a stem separated
    # from flavors with a double dash.  "screen--" matches only the
    # normal flavor, "screen--static" matches only the static flavor.
    # http://mirror.esc7.net/pub/OpenBSD/<VERSION>/packages/amd64/
    PACKAGES="\
        git\
        pkglocatedb\
        python-3*\
        wget\
    "
        #emacs-python\

    if [ ! -x /usr/X11R6/bin/xterm ]; then
        HAS_X=false
    fi

    if ${HAS_X}; then
        # password-store requires xclip
        # ucpp is used by .xsessionrc
        PACKAGES="\
            ${PACKAGES}\
            emacs--gtk3\
            password-store\
            psutils--\
            rxvt-unicode\
            ucpp\
            w3m--\
            xsel\
        "
    else
        PACKAGES="\
            ${PACKAGES}\
            emacs--no_x11\
        "
    fi

    # shellcheck disable=SC2086
    doas pkg_add -i -z ${PACKAGES}

elif [ -x "/usr/bin/zypper" ]; then
    # OpenSUSE.
    # https://software.opensuse.org/search
    # zypper search
    PACKAGES="\
        emacs-24.3\
        git\
        lynx\
        rxvt-unicode\
        shellcheck\
        tmux\
        w3m\
        xsel\
        xzgv\
    "

    # shellcheck disable=SC2086
    ${SUDO} zypper install --auto-agree-with-licenses --no-recommends ${PACKAGES}

elif [ -x "/usr/bin/yum" ]; then
    # Red Hat, CentOS.
    # http://mirror.centos.org/centos/6/os/x86_64/Packages/
    # sudo yum list
    PACKAGES="\
        emacs-23*\
        git\
        lynx\
        rxvt-unicode\
        tmux\
        w3m\
        xsel\
        xzgv\
    "

    # shellcheck disable=SC2086
    ${SUDO} yum install ${PACKAGES}

else
    echo "ERROR: Unknown package manager."
    exit 1
fi

# Determine which versions of Python3 are installed, ordered newest to oldest.
PYTHON3_VERSIONS=""
for ROOTDIR in /usr/bin /usr/local/bin; do
    for PYTHON in ${ROOTDIR}/python3.[0123456789]; do
        VERSION=$(echo "${PYTHON}" | grep -o '3\.[0123456789]')
        PYTHON3_VERSIONS="${PYTHON3_VERSIONS} ${VERSION}"
    done
done
PYTHON3_VERSIONS=$(
    echo "${PYTHON3_VERSIONS}" | tr " " "\n" | sort -r | uniq | tr "\n" " "
)
NEWEST_PYTHON3_VERSION=$(echo "${PYTHON3_VERSIONS}" | cut -d " " -f1)
echo "INFO: Latest Python3 version is ${NEWEST_PYTHON3_VERSION}"

# Upgrade or install pip for each version of installed Python.
GET_PIP_URL="https://bootstrap.pypa.io/get-pip.py"
GET_PIP=/tmp/get-pip.py
for PYTHON_VERSION in ${NEWEST_PYTHON3_VERSION}; do
    # Find the corresponding version of pip.
    FOUND_PIP=false
    for ROOTDIR in /usr/bin /usr/local/bin; do
        if [ -x "${ROOTDIR}/pip${PYTHON_VERSION}" ]; then
            echo "INFO: Found ${ROOTDIR}/pip${PYTHON_VERSION}..."
            FOUND_PIP=true
        fi
    done

    if [ "${FOUND_PIP}" = true ]; then
        echo "INFO: Upgrading pip${PYTHON_VERSION}..."
        ${SUDO} "pip${PYTHON_VERSION}" install --upgrade setuptools pip

    else
        PIP=pip${PYTHON_VERSION}
        if [ ! -f "${GET_PIP}" ]; then
            echo "INFO: Fetching ${GET_PIP_URL}..."
            wget --quiet -O ${GET_PIP} ${GET_PIP_URL}
        fi
        echo "INFO: Installing ${PIP}..."
        ${SUDO} "python${PYTHON_VERSION}" ${GET_PIP}
    fi
done

contains() {
    # Determine if $2 string is in $1 list.

    for ITEM in $1; do
        if [ "${ITEM}" = "$2" ]; then
            return 0
        fi
    done
    return 1
}

# Note that setuptools and wheel should have been installed by get-pip.py

# FIXME: Use "pip list" to filter out packages that are already
# installed, because installing an already installed package is slow.

# If any packages fail to install with pip, try installing by hand
# with "pip install -v".

# Define Python3 packages via pip.
PYPI3_PACKAGES="\
    goobook\
    line_profiler\
    pycodestyle\
    pydocstyle\
    pyflakes\
    pylint\
    pyprof2calltree\
    pytype\
    rst2pdf\
"
PYTHON3=python${NEWEST_PYTHON3_VERSION}
PIP3=""
for ROOTDIR in /usr/bin /usr/local/bin; do
    if [ -x "${ROOTDIR}/pip${NEWEST_PYTHON3_VERSION}" ]; then
        PIP3=${ROOTDIR}/pip${NEWEST_PYTHON3_VERSION}
    fi
done

# Install/update Python3 packages.
if [ "${PIP3}" != "" ]; then
    for PACKAGE in ${PYPI3_PACKAGES}; do
        echo "INFO: Installing/updating ${PACKAGE} using ${PIP3}..."
        "${PYTHON3}" "${PIP3}" install --quiet --upgrade "${PACKAGE}"
    done
fi

# As of 2012-01-11, the python-ropemacs 0.6c2-4 package is broken.  It
# ignores the ropemacs-enable-shortcuts variable when loading.
# Therefore we load it the hard way.
#cd /tmp
#
#tar xzf ${ROOTDIR}/packages/agr-ropemode-584d3eba7ca6.tar.gz
#cd agr-ropemode-584d3eba7ca6
#${SUDO} /usr/bin/env python setup.py --quiet install
#cd ..
#${SUDO} rm -rf agr-ropemode-584d3eba7ca6
#
#tar xzf ${ROOTDIR}/packages/agr-ropemacs-7af544334b85.tar.gz
#cd agr-ropemacs-7af544334b85
#${SUDO} /usr/bin/env python setup.py --quiet install
#cd ..
#${SUDO} rm -rf agr-ropemacs-7af544334b85
