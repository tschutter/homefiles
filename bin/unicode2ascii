#!/usr/bin/env python

"""
Read Unicode text and encode it as plain ASCII.
"""

import argparse
import sys
import unicodedata

# http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters
# http://www.utf8-chartable.de/unicode-utf8-table.pl
XTABLE = {
    0x02D7: "-",  # MODIFIER LETTER MINUS SIGN
    0x2000: " ",  # EN QUAD
    0x2001: " ",  # EM QUAD
    0x2002: " ",  # EN SPACE
    0x2003: " ",  # EM SPACE
    0x2004: " ",  # THREE-PER-EM SPACE
    0x2005: " ",  # FOUR-PER-EM SPACE
    0x2006: " ",  # SIX-PER-EM SPACE
    0x2007: " ",  # FIGURE SPACE
    0x2008: " ",  # PUNCTUATION SPACE
    0x2009: " ",  # THIN SPACE
    0x200A: " ",  # HAIR SPACE
    0x200B: " ",  # ZERO WIDTH SPACE
    0x200C: " ",  # ZERO WIDTH NON-JOINER
    0x200D: " ",  # ZERO WIDTH JOINER
    0x200E: " ",  # LEFT-TO-RIGHT MARK
    0x200F: " ",  # RIGHT-TO-LEFT MARK
    0x2010: "-",  # HYPHEN
    0x2011: "-",  # NON-BREAKING HYPHEN
    0x2012: "-",  # FIGURE DASH
    0x2013: "-",  # EN DASH
    0x2014: "-",  # EM DASH
    0x2015: "-",  # HORIZONTAL BAR
    0x2018: "'",  # LEFT SINGLE QUOTATION MARK
    0x2019: "'",  # RIGHT SINGLE QUOTATION MARK
    0x201C: '"',  # LEFT DOUBLE QUOTATION MARK
    0x201D: '"',  # RIGHT DOUBLE QUOTATION MARK
    0x2024: ".",  # ONE DOT LEADER
    0x2025: "..",  # TWO DOT LEADER
    0x2026: "...",  # HORIZONTAL ELLIPSIS
    0x2028: "\n",  # LINE SEPARATOR
    0x2029: "\n\n",  # PARAGRAPH SEPARATOR
    0x202F: " ",  # NARROW NO-BREAK SPACE
    0x2043: "-",  # HYPHEN BULLET
    0x205F: " ",  # MEDIUM MATHEMATICAL SPACE
    0x2212: "-",  # MINUS SIGN
}

def main():
    """main"""
    # Process command line.
    arg_parser = argparse.ArgumentParser(
        description="Converts Unicode to ASCII for each file."
    )
    arg_parser.add_argument(
        "files",
        metavar="file",
        nargs="*",
        help="file or - for standard input"
    )
    args = arg_parser.parse_args()
    if len(args.files) == 0:
        args.files.append("-")

    for arg in args.files:
        if arg == "-":
            text = sys.stdin.read()
        else:
            text = open(arg, "rb").read()
        utext = text.decode("utf8")
        utext = unicodedata.normalize("NFKD", utext)
        utext = utext.translate(XTABLE)
        try:
            utext.encode("ascii", "strict")
        except UnicodeEncodeError as err:
            if arg == "-":
                errfile = ""
            else:
                errfile = "In '%s', " % arg
            sys.stderr.write(
                "ERROR: %s%s\n" % (errfile, str(err))
            )
        #text = utext.encode("ascii", "backslashreplace")
        sys.stdout.write(utext)


if __name__ == "__main__":
    sys.exit(main())
