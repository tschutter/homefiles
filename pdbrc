# pdb(1) config file
#
# Trigger pdb by adding "breakpoint()" to code.
#

from __future__ import print_function

# Print a dictionary, sorted. %1 is the dict, %2 is the prefix for the names.
alias p_ for k in sorted(%1.keys()): print("{}{:<15}= {:.80}".format("%2", k, repr(%1[k])))

# Print the attributes of an object.
alias pi p_ %1.__dict__ %1.

# Print the attributes of self.
alias ps pi self

# Print all global variables.
alias pg p_ globals() global:

# Print all local variables.
alias pl p_ locals() local:

# Execute non-pdb commands.
import os
exec(open(os.path.expanduser("~/.homefiles/pdbrc.py")).read())

# Give some hints.  NameError happens if pdb was triggered by:
#   import pdb; pdb.set_trace()
print("NameError right above means command aliases not available")
print("pdb command aliases:")
print("  pi OBJ: print attributes of OBJ")
print("  ps: print attributes of self")
print("  pg: print globals")
print("  pl: print locals")
